generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tutor {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  firstname    String
  lastname     String?   @default("")
  rating       Int       @default(0)
  birthYear    Int       @db.SmallInt
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  monthlyClass Int       @default(0)
  classes      Class[]
}

model Student {
  id          Int         @id @default(autoincrement())
  username    String      @unique
  password    String
  firstname   String
  lastname    String?     @default("")
  rating      Int         @default(0)
  evalutaion  Evaluation?
  nationality String      @default("")
  timezone    String      @default("")
  birthYear   Int         @db.SmallInt
  leftClass   Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  deletedAt   DateTime?
  classes     Class[]
}

model Evaluation {
  studentId     Int     @id
  student       Student @relation(fields: [studentId], references: [id])
  fluency       Int
  vocabulary    Int
  grammar       Int
  pronunciation Int
}

model Message {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  classId   String
  class     Class     @relation(fields: [classId], references: [id])
}

model Class {
  id            String    @id @default(uuid())
  videoUrl      String?
  schedule      DateTime
  isCreated     Boolean   @default(false)
  isReady       Boolean   @default(false)
  studentSocket String    @default("")
  studentId     Int?
  student       Student?  @relation(fields: [studentId], references: [id])
  tutorSocket   String    @default("")
  tutorId       Int
  tutor         Tutor     @relation(fields: [tutorId], references: [id])
  messages      Message[]

  @@unique([schedule, tutorId])
}
